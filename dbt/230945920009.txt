PRN no.230945920009
section 1:
1. select * from emp  asending order by  hiredate;
2. select * from emp where empno % 2 = 1 ;
3. select job,avg(sal),max(sal),min(sal) from emp where job='clerk' or job='manager' group by job;
4. select job,count(empno) from emp order by count(empno) group by job ;
5.select max(sal)-1 from emp;
6.select ename,job,sal,ifnull(comm,"no commission") c1 from emp;
7.select deptno,count(empno),avg(sal) from emp  group by deptno having count(empno)>3;
8. select * from emp where sal>(select sal from emp where ename='adams');
9.A:lower than max sal:
         select * from emp where sal<(select max(sal) from emp );
  B:higher than min sal:
         select * from emp where sal>(select min(sal) from emp );
10.select hiredate,count(ename) from emp group by hiredate limit 1;
   

section 2:
1.employee details:

drop procedure if exists pro;
delimiter $
create procedure pro()
BEGIN
	declare empno int;
	declare empno,ename,gender,job,mgr,hiredate,sal,comm,deptno,bonusid,username,pwd,phone,isactive;
	declare c1 CURSOR for select * from emp;
	declare exit handler for 1064 select "END OF FILE";
	open c1;
		lbl:LOOP
			fetch c1  empno,ename,gender,job,mgr,hiredate,sal,comm,deptno,bonusid,username,pwd,phone,isactive;
			SELECT  empno,ename,gender,job,mgr,hiredate,sal,comm,deptno,bonusid,username,pwd,phone,isactive;
		end loop lbl;
	close c1;
end $
delimiter ;


2.Auto generate number first part:
   Drop function if exists autoNumber;
delimiter ^
create function autoNumber(_studentid int) returns int
Deterministic
BEGIN 
	select max(studentid)+1 into @z from student_new;
	return @z;
End ^
delimiter ;
     
 
   If number is there enter namefirst and namelast:
drop function if exists f1;
delimiter ^
CREATE function F1(_studentid int) returns int
Deterministic
BEGIN
	select _studentid into @z from student where _studentid=studentid;
	if (_studentid=@z) then 
	select namefirst,namelast into @a,@b from student where _studentid=studentid ;
	set @x = concat("namefirst:" ,@a ,"||", "namelast :" ,@b);
	return @x;
	end if;
	return ' student does not exists' ;
	
end ^
delimiter ;


